{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","leftPanel","maxWidth","header","backgroundColor","colors","color","padding","courseList","flexShrink","overflowY","minHeight","overflowX","table","fontWeight","fontSize","courseTitle","courseNote","credits","schedule","minWidth","hours","borderLeft","hoursContainer","marginTop","position","width","transform","textAlign","right","dayColumn","blocks","overflow","startTime","dayHeader","borderBottom","session","flexBasis","margin","paper","wordBreak","footer","borderTop","footerCaption","lineHeight","fontStyle","creditsTotal","getRandom","arr","Math","floor","random","length","earliest","latest","daysOfWeek","sessions","reduce","obj","day","colorArray","Object","values","map","courses","forEach","course","times","time","split","timeParts","exec","part","parseInt","hh1","mm1","hh2","mm2","days","Array","from","matchAll","startMin","duration","min","max","push","total","numHalfHours","halfHourPercentage","startsOnHour","App","classes","useTheme","useState","Set","selected","updateSelected","exorcist","find","number","styleLineBg","backgroundImage","backgroundPosition","useEffect","ids","window","location","hash","substr","console","log","filter","includes","crn","toString","className","style","display","has","CssBaseline","Grid","container","wrap","item","xs","direction","Typography","variant","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","key","palette","getContrastText","title","professor","note","align","Switch","checked","onChange","history","replaceState","pathname","Boolean","join","toggle","component","Number","isInteger","fill","nothing","i","hour","top","startTimes","keys","sort","a","b","data-start","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a0280be5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport courses from './courses.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport * as colors from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      flexGrow: 1,\n      height: '100vh',\n    },\n\n    leftPanel: {\n      maxWidth: '325px',\n      height: '100%',\n    },\n\n    header: {\n      backgroundColor: colors.blue[900],\n      color: colors.orange['A700'],\n      padding: '1em',\n    },\n\n    courseList: {\n      flexShrink: 1,\n      overflowY: 'auto',\n      minHeight: 0,\n      overflowX: 'hidden',\n    },\n\n    table: {\n      '& td, & th': {\n        padding: '6px 8px 6px 6px',\n      },\n      '& th': {\n        fontWeight: '700',\n        fontSize: '105%',\n      },\n      '& td': {\n        color: 'inherit',\n      },\n    },\n\n    courseTitle: {\n      fontWeight: '500',\n    },\n\n    courseNote: {\n      fontWeight: '200',\n      fontSize: '90%',\n    },\n\n    credits: {\n      fontSize: '125%',\n    },\n\n    schedule: {\n      minWidth: '1000px',\n    },\n\n    hours: {\n      maxWidth: '50px',\n      borderLeft: '1px solid #aaa',\n    },\n\n    hoursContainer: {\n      marginTop: '16pt',\n      position: 'relative',\n      width: '100%',\n\n      '& > div': {\n        position: 'absolute',\n        transform: 'translateY(-50%)',\n        textAlign: 'right',\n        right: '6px',\n      },\n    },\n\n    dayColumn: {\n      borderLeft: '1px solid #ccc',\n    },\n\n    blocks: {\n      position: 'relative',\n      overflow: 'hidden',\n    },\n\n    startTime: {\n      position: 'absolute',\n      height: '100%',\n    },\n\n    dayHeader: {\n      height: '16pt',\n      borderBottom: '2px solid #ccc',\n      fontWeight: '500',\n      textAlign: 'center',\n    },\n\n    session: {\n      flexGrow: 1,\n      flexBasis: 0,\n      height: '100%',\n      margin: '0 4px 0 1px',\n    },\n\n    paper: {\n      padding: '4px',\n      wordBreak: 'break-word',\n      fontSize: '90%',\n      overflow: 'hidden',\n    },\n\n    footer: {\n      borderTop: '2px solid #aaa',\n      padding: '8px',\n    },\n\n    footerCaption: {\n      lineHeight: '100%',\n      fontStyle: 'italic',\n      fontWeight: '200',\n    },\n\n    creditsTotal: {\n      fontWeight: '500',\n      padding: '8px',\n      margin: '0 8px',\n      width: '40px',\n      fontSize: '20pt',\n      textAlign: 'right',\n    },\n  };\n});\n\nfunction getRandom(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nconst daysOfWeek = ['M', 'T', 'W', 'Th', 'F'];\nconst sessions = daysOfWeek.reduce((obj, day) => {\n  obj[day] = {};\n  return obj;\n}, {});\n\n// keep track of the earliest/latest course times\nlet earliest, latest;\nconst colorArray = Object.values(colors).map(arr => Object.values(arr));\n\ncourses.forEach(course => {\n  let times = course.time.split(',');\n  course.color = getRandom(getRandom(colorArray));\n\n  times.forEach(time => {\n    let timeParts = /([1-9][0-2]?):([0-5][0-9])-([1-9][0-2]?):([0-5][0-9])/.exec(time);\n    if (!timeParts) {\n      return;\n    }\n    let [, hh1, mm1, hh2, mm2] = timeParts.map(part => parseInt(part));\n    // convert hours to 12-hour scheme\n    hh1 = hh1 < 8 ? hh1 + 12 : hh1;\n    hh2 = hh2 < 9 ? hh2 + 12 : hh2;\n    let days = Array.from(time.matchAll(/[MTWF]h?/g));\n    let startMin = 60 * hh1 + mm1;\n    let duration = (60 * hh2 + mm2) - startMin;\n    earliest = earliest ? Math.min(earliest, startMin) : startMin;\n    latest = latest ? Math.max(latest, startMin + duration) : startMin + duration;\n    days.forEach(day => {\n      sessions[day][startMin] = sessions[day][startMin] || [];\n      sessions[day][startMin].push({course, duration});\n    });\n  });\n});\n\n// round earliest/latest up/down to nearest half hour\nearliest = earliest - (earliest % 30);\nlatest = latest + 30 - (latest % 30);\nconst total = latest - earliest;\nconst numHalfHours = (total / 30);\nconst halfHourPercentage = 100 / numHalfHours;\nconst startsOnHour = !(earliest % 60);\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [selected, updateSelected] = useState(new Set());\n  const exorcist = courses.find(course => course.number === 'Law 666');\n\n  function toggle(course) {\n    selected[selected.has(course) ? 'delete' : 'add'](course);\n    updateSelected(new Set(selected));\n    window.history.replaceState(null, '', `${window.location.pathname}#${Array.from(selected).map(course => course.crn).filter(Boolean).join(',')}`);\n  }\n\n  const styleLineBg = {\n    backgroundImage: `repeating-linear-gradient(\n      transparent, transparent calc(${halfHourPercentage}% - ${startsOnHour ? 1 : 2}px), #ccc calc(${halfHourPercentage}% - ${startsOnHour ? 1 : 2}px), #ccc ${halfHourPercentage}%,\n      transparent ${halfHourPercentage}%, transparent calc(${halfHourPercentage * 2}% - ${startsOnHour ? 2 : 1}px), #ccc calc(${halfHourPercentage * 2}% - ${startsOnHour ? 2 : 1}px), #ccc ${halfHourPercentage * 2}%)`,\n    backgroundPosition: '0 1px',\n  };\n\n  useEffect(() => {\n    const ids = window.location.hash.substr(1).split(',');\n    console.log(ids);\n    if (!ids.length) {\n      return;\n    }\n    updateSelected(new Set(courses.filter(course => ids.includes(course.crn.toString()))));\n  }, []);\n\n  return (\n    <>\n      <div className=\"glitch glitch--style-1\" style={{display: selected.has(exorcist) ? 'block' : 'none'}}>\n        <div className=\"glitch__img\"></div>\n        <div className=\"glitch__img\"></div>\n        <div className=\"glitch__img\"></div>\n        <div className=\"glitch__img\"></div>\n        <div className=\"glitch__img\"></div>\n      </div>\n      <CssBaseline/>\n      <Grid container className={classes.root} wrap=\"nowrap\">\n        <Grid container item xs className={classes.leftPanel} direction=\"column\">\n          <Grid item className={classes.header}>\n            <Typography variant=\"h4\">Illinois Law</Typography>\n            <Typography variant=\"h6\"><em>Unofficial</em> Schedule Planner</Typography>\n          </Grid>\n          <Grid item className={classes.courseList} xs>\n            <Paper>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Num</TableCell>\n                    <TableCell>Course</TableCell>\n                    <TableCell>Hrs</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {courses.map(course => (\n                    <TableRow key={course.crn}>\n                      <TableCell\n                        style={selected.has(course) ? {backgroundColor: course.color, color: theme.palette.getContrastText(course.color)} : {}}\n                      >\n                        {course.number}\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" className={classes.courseTitle}>{course.title}</Typography>\n                        <Typography variant=\"body2\">{course.professor}</Typography>\n                        <Typography variant=\"body2\" className={classes.courseNote}>{course.time}</Typography>\n                        <Typography variant=\"body2\" className={classes.courseNote}>\n                          CRN: {course.crn}\n                        </Typography>\n                        {course.note && <Typography variant=\"body2\" className={classes.courseNote}><em>{course.note}</em></Typography>}\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.credits}\n                        >\n                          {course.credits}\n                        </TableCell>\n                        <TableCell>\n                          <Switch size=\"small\" checked={selected.has(course)} onChange={() => toggle(course)}/>\n                        </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Paper>\n          </Grid>\n          <Grid item container className={classes.footer}>\n            <Grid item xs>\n              <Typography variant=\"button\" component=\"div\">\n                Total Credit Hours Selected:\n              </Typography>\n              <Typography variant=\"caption\" className={classes.footerCaption} component=\"div\">\n                Be sure to account for clinics, journals, externships, TA positions, etc.\n              </Typography>\n            </Grid>\n            <Grid className={classes.creditsTotal}>\n              {Array.from(selected).reduce((total, course) => total + (Number.isInteger(course.credits) ? course.credits : 0), 0)}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container item xs className={classes.schedule}>\n          <Grid container item className={classes.hours}>\n            <Grid item className={classes.hoursContainer}>\n              {Array(numHalfHours).fill().map((nothing, i) => {\n                let hour = Math.floor(earliest / 60) + (i ? Math.floor((startsOnHour ? i : i + 1) / 2) : 0);\n                hour = hour > 12 ? hour - 12 : hour;\n                let min = !(i % 2) === startsOnHour ? '00' : '30';\n                return <div style={{top: `${i * halfHourPercentage}%`}} key={i}>{`${hour}:${min}`}</div>;\n              })}\n            </Grid>\n          </Grid>\n          {daysOfWeek.map(day => {\n            let startTimes = Object.keys(sessions[day]);\n            startTimes.sort((a, b) => a - b);\n\n            return (\n              <Grid item container direction=\"column\" key={day} xs className={classes.dayColumn}>\n                <Grid item className={classes.dayHeader}>{day}</Grid>\n                <Grid item className={classes.blocks} xs style={styleLineBg}>\n                  {startTimes.map(startTime => (\n                    <Grid\n                      container\n                      className={classes.startTime}\n                      key={startTime}\n                      style={{top: `${((startTime - earliest) / total) * 100}%`}}\n                      data-start={startTime}\n                    >\n                      {sessions[day][startTime].map(session => (selected.has(session.course) &&\n                        <Grid item key={session.course.crn} className={classes.session}>\n                          <Paper\n                            style={{height: `${(session.duration / total) * 100}%`, backgroundColor: session.course.color, color: theme.palette.getContrastText(session.course.color)}}\n                            className={classes.paper}\n                            title={`${session.course.title}${session.course.note ? ` (${session.course.note})` : ''}`}\n                          >\n                            <Typography variant=\"body1\">\n                              {session.course.title}\n                            </Typography>\n                            <Typography variant=\"body2\">\n                              {session.course.professor}\n                            </Typography>\n                          </Paper>\n                        </Grid>\n                      ))}\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}